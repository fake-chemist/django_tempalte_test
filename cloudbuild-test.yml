substitutions:
  _PROJECT_NAME: app-name
  _REPOSITORY: gcr.io/smartersorting-images

steps:
  - name: gcr.io/cloud-builders/docker
    id: pull-latest
    entrypoint: /bin/bash
    args:
      - -evc
      - docker pull -q ${_REPOSITORY}/${_PROJECT_NAME}:latest || echo 'Prior image not available for caching'

  - name: gcr.io/cloud-builders/docker
    id: build
    entrypoint: /bin/bash
    waitFor:
      - pull-latest
    args:
      - -evc
      - |
        docker build --cache-from ${_REPOSITORY}/${_PROJECT_NAME}:latest \
          -t ${_REPOSITORY}/${_PROJECT_NAME}:latest \
          -t ${_REPOSITORY}/${_PROJECT_NAME}:sha-${SHORT_SHA} \
          -t ${_PROJECT_NAME}:latest .

  - name: 'us.gcr.io/ss-platform-staging/cloudsdk-codeclimate:updated-docker-compose'
    id: setup-test-env
    entrypoint: /bin/sh
    waitFor:
      - '-'
    env:
      - 'CC_TEST_REPORTER_ID=<test-reporter-id-from-codeclimate>'
    args:
      - -evc
      - cc-test-reporter before-build

  - name: 'us.gcr.io/ss-platform-staging/cloudsdk-codeclimate:updated-docker-compose'
    id: run-tests
    entrypoint: /bin/sh
    env:
      - 'COVERAGE_REPORT_ARGS=xml'
      - 'COMPOSE_HOST_MOUNT_POINT=/workspace'
    waitFor:
      - setup-test-env
      - build
    args:
      - -evc
      - docker-compose -f docker-compose-test.yml run api-test

  - name: 'us.gcr.io/ss-platform-staging/cloudsdk-codeclimate:updated-docker-compose'
    id: send-coverage-report
    entrypoint: /bin/sh
    env:
      - 'CC_TEST_REPORTER_ID=<test-reporter-id-from-codeclimate>'
      - 'COVERAGE_FILE=/workspace/coverage.xml'
    waitFor:
      - run-tests
    args:
      - -evc
      - |
        date +'%s' > _GIT_TIMESTAMP
        export GIT_COMMITTED_AT=$(cat _GIT_TIMESTAMP)
        export GIT_COMMIT_SHA=$COMMIT_SHA 
        export GIT_BRANCH=$BRANCH_NAME
        cc-test-reporter after-build -d -p /opt/smarter-sorting/app-name/
